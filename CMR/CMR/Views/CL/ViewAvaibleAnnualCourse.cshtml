@model PagedList.IPagedList<CMR.Models.AnnualCourse>
@using PagedList.Mvc;

<h2>View All Annual Course</h2>

@using (Html.BeginForm())
{
    <div class="form-inline" style="margin-bottom:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            @Html.TextBox("txtAcademicYearFrom", ViewBag.From as String, "", new { @class = "form-control", @Style = "border-radius:0px; margin-bottom:5px;", onfocus = "(this.type='text')", onfocusout = "(this.type='text')", @placeholder = "Time from..." })
            @Html.TextBox("txtAcademicYearTo", ViewBag.To as String, "", new { @class = "form-control", @Style = "border-radius:0px; margin-bottom:5px;", onfocus = "(this.type='text')", onfocusout = "(this.type='text')", @placeholder = "Time To..." })
            @Html.TextBox("txtKeyWord", ViewBag.KeyWord as String, new { @class = "form-control", @Style = "border-radius:0px; margin-bottom:5px;", @placeholder = "Course name..." })   
            <input type="submit" value="Search" class="btn btn-default" style="margin-bottom:5px;" />
        </div>
    </div>
}

<p>
    @{
        var index = 0;
        var straight = " | ";
    }
</p>

@if (Model.Count() > 0)
{
	<div>
		<table class="tablesaw" data-tablesaw-mode="stack">
			<thead>
				<tr>
					<th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist">
                        @Html.DisplayName("#")
                    </th>
					<th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="1">
						@Html.ActionLink("Academic year", "ViewAvaibleAnnualCourse", new { sortOrder = ViewBag.SortAcademicYear, currentFilter = ViewBag.currentFilter })
					</th>
					<th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">
						@Html.ActionLink("Faculty name", "ViewAvaibleAnnualCourse", new { sortOrder = ViewBag.SortUserName, currentFilter = ViewBag.currentFilter })
					</th>
					<th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="3">
						@Html.ActionLink("Course name", "ViewAvaibleAnnualCourse", new { sortOrder = ViewBag.SortCourseName, currentFilter = ViewBag.currentFilter })
					</th>
					@*<th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="4">
							@Html.ActionLink("Status", "ViewAllAnnualCourse", new { sortOrder = ViewBag.SortStatus, currentFilter = ViewBag.currentFilter })
						</th>*@
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>
							@{
					index++;
					@index
							}
						</td>
						<td>
							@Html.ValueFor(modelItem => item.academicYear)

						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Course.Faculty.facultyName)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Course.courseName)
						</td>
						<td>
							@if (item.Status == "Wait")
							{
								@Html.ActionLink("Take", "TakeAnnualCourse", new { annualCourseId = item.annualCourseId })
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
		<br />


		Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


		@Html.PagedListPager(Model, page => Url.Action("ViewAvaibleAnnualCourse",
	new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
	</div>
}
else
{
    <div class="alert alert-danger" style="text-align:center">
        No data
    </div>
}