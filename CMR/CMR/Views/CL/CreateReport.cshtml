@model CMR.Models.CourseMonitoringReport

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create new report</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("annualCourseId",(String) ViewBag.annualCourseId)
        @Html.Hidden("approveStatusId", "1")
        @Html.Hidden("studentTotal",(int)ViewBag.total)
        @Html.Hidden("markA",(int) ViewBag.markA)
        @Html.Hidden("markB", (int)ViewBag.markB)
        @Html.Hidden("markC", (int)ViewBag.markC)
        @Html.Hidden("markD", (int)ViewBag.markD)

        <div class="form-group">
            @Html.Label("Student Total", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("studentTotal",(int) ViewBag.total, new { @class = "form-control" , @readonly = "readonly", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.studentTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mark A", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("markA", (int)ViewBag.markA, new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.markA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mark B", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("markB", (int)ViewBag.markB, new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.markB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mark C", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("markC", (int)ViewBag.markC, new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.markC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Mark D", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("markD", (int)ViewBag.markD, new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.markD, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Evaluation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.clEvaluation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.clEvaluation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Send To CM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <input type="checkbox" value="2" name="waiting">
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
