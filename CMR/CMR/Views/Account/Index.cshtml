@model PagedList.IPagedList<CMR.Models.Account>
@using PagedList.Mvc;

<p>
    @Html.ActionLink("Create New", "Register")
    @{
        var index = 0;
    }
</p>
<div style="margin-bottom:10px;">
    @using (Html.BeginForm("Index", "Account", FormMethod.Post, new { @class = "form-inline" }))
    {
        <div class="form-group">
            @Html.TextBox("searchString", ViewBag.currentFilter as String, new { @class = "form-control", @placeholder = "Username, Email..." })
        </div>
        <button type="submit" class="btn btn-default">Search</button>
    }
</div>

    @if (Model.Count() > 0)
    {
        <div>
            <table class="tablesaw" data-tablesaw-mode="stack">
                <thead>
                    <tr>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist">
                            @Html.DisplayName("#")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="1">
                            @Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.currentFilter })
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">
                            @Html.DisplayName("Full Name")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="4">
                            @Html.DisplayName("Role")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="5">
                            @Html.DisplayName("Telephone")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="6">
                            @Html.DisplayName("Email")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="7">
                            @Html.DisplayName("Address")
                        </th>
                        <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="8">Action</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {

                        <tr>
                            <td>
                                @{
                        index++;
                        @index
                                }
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.userName)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Profile.name)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Role.roleName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Profile.telephone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Profile.email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Profile.address)
                            </td>
                            <td>

                                @Html.ActionLink("Detail", "Detail", new { accountId = item.accountId }) |
                                @if (item.Role.roleName != "Admin")
                                {
                                    @Html.ActionLink("Edit", "Edit", new { accountId = item.accountId })

                                }
                            </td>
                        </tr>

                    }
                </tbody>

            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    }
else
{
        <div class="alert alert-danger" style="text-align:center">
            No data
        </div>
}


