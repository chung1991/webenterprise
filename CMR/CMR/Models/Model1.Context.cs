//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMR.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRMContext : DbContext
    {
        public CRMContext()
            : base("name=CRMContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AnnualCourse> AnnualCourses { get; set; }
        public virtual DbSet<ApproveStatu> ApproveStatus { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseMonitoringReport> CourseMonitoringReports { get; set; }
        public virtual DbSet<Faculty> Faculties { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_InsertAnnualCourse(Nullable<System.DateTime> academicYear, Nullable<int> courseId)
        {
            var academicYearParameter = academicYear.HasValue ?
                new ObjectParameter("academicYear", academicYear) :
                new ObjectParameter("academicYear", typeof(System.DateTime));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAnnualCourse", academicYearParameter, courseIdParameter);
        }
    
        public virtual int sp_InsertCourse(string courseName, Nullable<int> facultyId)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("courseName", courseName) :
                new ObjectParameter("courseName", typeof(string));
    
            var facultyIdParameter = facultyId.HasValue ?
                new ObjectParameter("facultyId", facultyId) :
                new ObjectParameter("facultyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCourse", courseNameParameter, facultyIdParameter);
        }
    }
}
